(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     19683,        507]
NotebookOptionsPosition[     19394,        493]
NotebookOutlinePosition[     19742,        508]
CellTagsIndexPosition[     19699,        505]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"picketFenceAnalysis", ":=", 
    RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"analysisCalculation", "[", 
        RowBox[{"counterData_", ",", "spacing_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
          "time", ",", "distance", ",", "xyData", ",", "nlmFreefall", ",", 
           "displacementFunction", ",", "velocityFunction", ",", 
           "accelerationFunction"}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"time", " ", "=", " ", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "counterData", "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"distance", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"j", "*", "spacing"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "0", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "[", "time", "]"}], " ", "-", " ", "1"}], 
                ")"}]}], " ", "}"}]}], "]"}]}], ";", 
          RowBox[{"xyData", " ", "=", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{"time", ",", "distance"}], "}"}], "]"}]}], ";", 
          RowBox[{"nlmFreefall", " ", "=", " ", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"xyData", ",", " ", 
             RowBox[{
              RowBox[{"a", "*", 
               RowBox[{"z", "^", "2"}]}], " ", "+", " ", 
              RowBox[{"b", "*", "z"}], " ", "+", " ", "c"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "z"}], "]"}]}], 
          ";", 
          RowBox[{"displacementFunction", " ", "=", " ", 
           RowBox[{"Normal", "[", "nlmFreefall", "]"}]}], ";", 
          RowBox[{"velocityFunction", " ", "=", " ", 
           RowBox[{"D", "[", 
            RowBox[{"displacementFunction", ",", "z"}], "]"}]}], ";", 
          RowBox[{"accelerationFunction", " ", "=", " ", 
           RowBox[{"D", "[", 
            RowBox[{"velocityFunction", ",", "z"}], "]"}]}], ";", 
          RowBox[{"g", " ", "=", " ", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"CoefficientList", "[", 
               RowBox[{"accelerationFunction", ",", "z"}], "]"}], "]"}], ",", 
             "4"}], "]"}]}], ";", 
          RowBox[{"userInTable", " ", "=", " ", 
           RowBox[{"TableForm", "[", 
            RowBox[{"counterData", ",", 
             RowBox[{"TableHeadings", "->", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Count\>\"", ",", " ", "\"\<Time at Event (s)\>\""}], 
                 "}"}]}], "}"}]}], ",", 
             RowBox[{"TableAlignments", "->", "Center"}]}], "]"}]}], ";", 
          RowBox[{"freefallResults", " ", "=", " ", 
           RowBox[{"TableForm", "[", 
            RowBox[{"xyData", ",", 
             RowBox[{"TableHeadings", "->", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Time Elapsed (s)\>\"", ",", " ", 
                  "\"\<Displacement (m)\>\""}], "}"}]}], "}"}]}], ",", 
             RowBox[{"TableAlignments", "->", "Center"}]}], "]"}]}], ";", 
          RowBox[{"plotSensorData", " ", "=", " ", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"ListPlot", "[", "xyData", "]"}], ",", " ", 
             RowBox[{"Plot", "[", 
              RowBox[{"displacementFunction", ",", 
               RowBox[{"{", 
                RowBox[{"z", ",", 
                 RowBox[{"time", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"time", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", 
             RowBox[{"FrameLabel", "->", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Displacemnt (m)\>\"", ",", "\"\<\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<Time (s)\>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Displacement of Body in Freefall\>\"", ",", 
                    RowBox[{"FontSize", "->", "12"}]}], "]"}]}], "}"}]}], 
               "}"}]}]}], "]"}]}], ";", 
          RowBox[{"plotVel", " ", "=", " ", 
           RowBox[{"Plot", "[", 
            RowBox[{"velocityFunction", ",", " ", 
             RowBox[{"{", 
              RowBox[{"z", ",", " ", "0", ",", " ", 
               RowBox[{"time", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", " ", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Velocity (m/s)\>\"", ",", "\"\<\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<Time (s)\>\"", ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Velocity of Body in Freefall\>\"", ",", 
                    RowBox[{"FontSize", "->", "12"}]}], "]"}]}], "}"}]}], 
               "}"}]}]}], "]"}]}], ";", 
          RowBox[{"plotAccel", " ", "=", 
           RowBox[{"Plot", "[", 
            RowBox[{"accelerationFunction", ",", " ", 
             RowBox[{"{", 
              RowBox[{"z", ",", "0", ",", "20"}], "}"}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Acceleration (m/\\!\\(\\*SuperscriptBox[\\(s\\), \
\\(2\\)]\\))\>\"", ",", "\"\<\>\""}], "}"}], "}"}]}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"dataInputInterface", ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CreateDialog", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "TextCell", "[", "\"\<Picket Distance (m): \>\"", "]"}], ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{"Dynamic", "[", "spacing", "]"}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Row", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TextCell", "[", "\"\<Sensor Data: \>\"", "]"}], ",", 
                 RowBox[{"InputField", "[", 
                  RowBox[{"Dynamic", "[", "counterDataOut", "]"}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Row", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"CancelButton", "[", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"DefaultButton", "[", 
                  RowBox[{
                   RowBox[{"analysisCalculation", "[", 
                    RowBox[{"counterDataOut", ",", "spacing"}], "]"}], ";", 
                   "returnAnalysis"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
           "\[IndentingNewLine]", "}"}], "]"}], ";"}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"returnAnalysis", ":=", 
       RowBox[{"DialogReturn", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"CreateDocument", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{"\"\<Save\>\"", ",", " ", 
                    RowBox[{"NotebookSave", "[", "]"}]}], "]"}], ",", " ", 
                  RowBox[{"Button", "[", 
                   RowBox[{"\"\<Exit\>\"", ",", 
                    RowBox[{"DialogReturn", "[", "]"}]}], "]"}]}], "}"}], 
                "}"}], "]"}], ",", 
              RowBox[{"TextCell", "[", "freefallResults", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"GraphicsRow", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "plotSensorData", ",", " ", "plotVel", ",", " ", 
                  "plotAccel"}], "}"}], ",", " ", 
                RowBox[{"ImageSize", "->", "Full"}], ",", " ", 
                RowBox[{"Frame", "->", "True"}]}], "]"}], ",", 
              RowBox[{"TextCell", "[", 
               RowBox[{
                RowBox[{"Quantity", "[", 
                 RowBox[{"g", ",", " ", "\"\<m/s^2\>\""}], "]"}], ",", " ", 
                RowBox[{"FontSize", "->", "12"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], ")"}], ";"}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "dataInputInterface", 
      ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classPath", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Java\>\"", ",", 
       "\"\<dist\>\"", ",", "\"\<PhotogateDriver.jar\>\""}], "}"}], ",", 
     RowBox[{"OperatingSystem", "->", "\"\<Unix\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"InstallJava", "[", 
   RowBox[{"ClassPath", "->", "classPath"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"serialLink", " ", "=", " ", 
    RowBox[{"JavaNew", "[", 
     RowBox[{
     "LoadJavaClass", "[", "\"\<photogatedriver.PhotogateDriver\>\"", "]"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initalise", ":=", 
    RowBox[{"(", "\n", 
     RowBox[{
      RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", "\n", 
      RowBox[{"InstallJava", "[", 
       RowBox[{"ClassPath", "->", "classPath"}], "]"}], ";", "\n", 
      RowBox[{"serialLink", " ", "=", " ", 
       RowBox[{"JavaNew", "[", 
        RowBox[{
        "LoadJavaClass", "[", "\"\<photogatedriver.PhotogateDriver\>\"", 
         "]"}], "]"}]}], ";", "\n", "findPorts", ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ports", "]"}], ">", "0"}], ",", 
        RowBox[{"portString", "=", 
         RowBox[{"ports", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"portString", "=", "\"\<\>\""}]}], "]"}], ";", "\n", 
      RowBox[{"isConnected", "=", "False"}], ";"}], "\n", ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findPorts", ":=", 
    RowBox[{"ports", " ", "=", " ", 
     RowBox[{"serialLink", "@", 
      RowBox[{"listPorts", "[", "]"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listPorts", ":=", 
    RowBox[{"serialLink", "@", 
     RowBox[{"listPorts", "[", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"clearLog", ":=", 
    RowBox[{"serialLink", "@", 
     RowBox[{"clearLog", "[", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eventMode", " ", ":=", 
    RowBox[{"serialLink", "@", 
     RowBox[{"modeEventTime", "[", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gapMode", ":=", 
    RowBox[{"serialLink", "@", 
     RowBox[{"modeGapTime", "[", "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"countMode", ":=", 
    RowBox[{"serialLink", "@", 
     RowBox[{"modeEventCount", "[", "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"returnLog", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "/@", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"#", ",", "\"\<_\>\""}], "]"}]}], "&"}], "/@", 
     RowBox[{"StringSplit", "[", 
      RowBox[{
       RowBox[{"serialLink", "@", 
        RowBox[{"printLog", "[", "]"}]}], ",", "\"\<~\>\""}], "]"}]}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"endSession", ":=", 
    RowBox[{"(", "\n", 
     RowBox[{
      RowBox[{"serialLink", "@", 
       RowBox[{"disconnectArduino", "[", "]"}]}], ";", "\n", 
      RowBox[{"UninstallJava", "[", "]"}], ";"}], "\n", ")"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"connectArduino", "[", "portString_", "]"}], ":=", 
    RowBox[{"connectionSuccess", "=", 
     RowBox[{"serialLink", "@", 
      RowBox[{"connectArduino", "[", "portString", "]"}]}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newSession", "[", "portString_", "]"}], ":=", 
    RowBox[{"(", "\n", 
     RowBox[{
      RowBox[{"serialLink", "@", 
       RowBox[{"disconnectArduino", "[", "]"}]}], ";", "\n", 
      RowBox[{"connectArduino", "[", "portString", "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"connectionSuccess", ",", "\n", 
        RowBox[{
         RowBox[{"ShowJavaConsole", "[", "\"\<stdout\>\"", "]"}], ";", "\n", 
         RowBox[{"isConnected", "=", "True"}], ";"}]}], "\n", "]"}]}], "\n", 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"portSelectionMenu", ":=", 
    RowBox[{"PopupMenu", "[", 
     RowBox[{
      RowBox[{"Dynamic", "[", "portString", "]"}], ",", " ", "ports", ",", 
      RowBox[{"Enabled", "->", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"!", "isConnected"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "->", 
       RowBox[{"{", 
        RowBox[{"90", ",", "30"}], "}"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"portRefreshButton", ":=", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Refresh\>\"", ",", "findPorts", ",", 
      RowBox[{"Enabled", "->", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"!", "isConnected"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "->", 
       RowBox[{"{", 
        RowBox[{"90", ",", "30"}], "}"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"connectButton", ":=", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Connect\>\"", ",", 
      RowBox[{"findPorts", ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ports", "]"}], ">", "0"}], ",", 
         RowBox[{"newSession", "[", "portString", "]"}]}], "]"}]}], ",", 
      RowBox[{"Method", "->", "\"\<Queued\>\""}], ",", 
      RowBox[{"Enabled", "->", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "ports", "]"}], ">", "0"}], "&&", 
          RowBox[{"!", "isConnected"}]}], ")"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "->", 
       RowBox[{"{", 
        RowBox[{"90", ",", "30"}], "}"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"disconnectButton", ":=", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Disconnect\>\"", ",", 
      RowBox[{"endSession", ";", "initalise"}], ",", 
      RowBox[{"Method", "->", "\"\<Queued\>\""}], ",", 
      RowBox[{"Enabled", "->", 
       RowBox[{"Dynamic", "[", "isConnected", "]"}]}], ",", 
      RowBox[{"ImageSize", "->", 
       RowBox[{"{", 
        RowBox[{"90", ",", "30"}], "}"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"printLogButton", ":=", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Return Data\>\"", ",", 
      RowBox[{"Print", "[", "returnLog", "]"}], ",", 
      RowBox[{"Method", "->", "\"\<Queued\>\""}], ",", 
      RowBox[{"Enabled", "->", 
       RowBox[{"Dynamic", "[", "isConnected", "]"}]}], ",", 
      RowBox[{"ImageSize", "->", 
       RowBox[{"{", 
        RowBox[{"90", ",", "30"}], "}"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"modeSelectionMenu", ":=", 
    RowBox[{"ActionMenu", "[", 
     RowBox[{"\"\<Mode\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Gap Time\>\"", ":>", "gapMode"}], ",", 
        RowBox[{"\"\<Event Time\>\"", ":>", " ", "eventMode"}], ",", 
        RowBox[{"\"\<Event Count\>\"", "\[RuleDelayed]", "countMode"}]}], 
       "}"}], ",", 
      RowBox[{"ImageSize", "->", 
       RowBox[{"{", 
        RowBox[{"90", ",", "30"}], "}"}]}], ",", 
      RowBox[{"Enabled", "->", 
       RowBox[{"Dynamic", "[", "isConnected", "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"toolbar", ":=", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"Dynamic", "@", "portSelectionMenu"}], ",", "\n", 
      "portRefreshButton", ",", "\n", 
      RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", "connectButton", ",", 
      "\n", 
      RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", "disconnectButton", ",", 
      "\n", 
      RowBox[{"Spacer", "[", "50", "]"}], ",", "\n", "printLogButton", ",", 
      "\n", "modeSelectionMenu"}], "\n", "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699274101923992*^9, 3.699274129359063*^9}, {
   3.699279616092041*^9, 3.6992796513256865`*^9}, 3.6993649331049414`*^9, {
   3.699374647102028*^9, 3.6993746739511538`*^9}}],

Cell[BoxData[{
 RowBox[{"endSession", ";"}], "\n", 
 RowBox[{"initalise", ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateWindow", "[", 
   RowBox[{
    RowBox[{"DockedCells", "->", 
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"BoxData", "[", 
        RowBox[{"ToBoxes", "[", 
         RowBox[{"Dynamic", "[", "toolbar", "]"}], "]"}], "]"}], ",", 
       "\"\<DockedCell\>\"", ",", 
       RowBox[{"Background", "->", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0.991791", ",", " ", "0.866468"}], "]"}]}]}],
       "]"}]}], ",", 
    RowBox[{"NotebookEventActions", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<WindowClose\>\"", ":>", 
       RowBox[{"UninstallJava", "[", "]"}]}], "}"}]}]}], "]"}], 
  ";"}]}], "Input"]
},
WindowSize->{1366, 725},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 18079, 448, 2216, "Input"],
Cell[18640, 470, 750, 21, 88, "Input"]
}
]
*)

